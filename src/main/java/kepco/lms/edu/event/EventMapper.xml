<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kepco.lms.edu.event.EventMapper">

	<sql id="selectWhere">
		<where>
			<choose>
				<when test="_parameter.containsKey(scDeleteYn)">AND delete_yn = #{scDeleteYn}</when>
				<otherwise>AND a.delete_yn = 'n'</otherwise>
			</choose>
			<if test="!@kepco.util.StrUtil@isBlank(modulePlayIdx)">
				AND a.module_play_idx = #{modulePlayIdx}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(eventIdx)">
				AND a.event_idx = #{eventIdx}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(playIdx)">
				AND a.play_idx = #{playIdx}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(riskFactor)">
				AND a.risk_Factor = #{riskFactor}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(playTeamIdx)">
				AND f.play_team_idx = #{playTeamIdx}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(memberId)">
				AND f.member_id = #{memberId}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(detailIdx)">
				AND f.detail_idx = #{detailIdx}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(attempt)">
				AND g.attempt = #{attempt}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(moduleCd)">
				AND g.module_cd = #{moduleCd}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(accidentYn)">
				AND a.accident_yn = #{accidentYn}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(eduIdx)">
				AND i.edu_idx = #{eduIdx}
			</if>
		</where>
	</sql>
	
	<select id="selectList" parameterType="map" resultType="kepco.lms.edu.event.EventVo">
		SELECT a.*, b.process_idx, b.work_role, b.process_contents, b.task_tool, 
		c.accident_idx, c.event_location, c.accident_event, c.object_factor, c.behavior_factor, c.accident_code,
		d.accident_content_idx, d.accident_type, d.accident_cause, d.accident_behavior,
		e.evaluation_id, e.evaluation_type, f.work_role,
		h.c1, h.c2, h.c3, h.c4, h.c5, h.weather
		FROM lms_edu_event a
		LEFT JOIN lms_edu_process b ON a.task_id = b.task_id
		LEFT JOIN lms_edu_accident c ON a.event_id = c.event_id
		LEFT JOIN lms_edu_accident_content d ON c.accident_code = d.accident_code
		LEFT JOIN lms_edu_evaluation e ON a.evaluation_id = e.evaluation_id
		LEFT JOIN lms_edu_play f ON a.play_idx = f.play_idx
		LEFT JOIN lms_edu_detail i ON f.detail_idx = i.detail_idx
		LEFT JOIN lms_edu_module_play g ON a.module_play_idx = g.module_play_idx
		LEFT JOIN 
    (
        SELECT 
            *,
            ROW_NUMBER() OVER (PARTITION BY module_play_idx ORDER BY process_start_time DESC) AS rn
        FROM 
            lms_edu_process_play
    ) h ON a.module_play_idx = h.module_play_idx AND h.rn = 1

			<include refid="selectWhere"/>
	ORDER BY a.event_start_time DESC 
	</select>
	
	<select id="select" parameterType="map" resultType="kepco.lms.edu.event.EventVo">
		SELECT a.*, b.process_idx, b.work_role, b.process_contents, b.task_tool, 
		c.accident_idx, c.event_location, c.accident_event, c.object_factor, c.behavior_factor, c.accident_code,
		d.accident_content_idx, d.accident_type, d.accident_cause, d.accident_behavior,
		e.evaluation_id, e.evaluation_type, f.work_role,
		h.c1, h.c2, h.c3, h.c4, h.c5, h.weather
		FROM lms_edu_event a
		LEFT JOIN lms_edu_process b ON a.task_id = b.task_id
		LEFT JOIN lms_edu_accident c ON a.event_id = c.event_id
		LEFT JOIN lms_edu_accident_content d ON c.accident_code = d.accident_code
		LEFT JOIN lms_edu_evaluation e ON a.evaluation_id = e.evaluation_id
		LEFT JOIN lms_edu_play f ON a.play_idx = f.play_idx
		LEFT JOIN lms_edu_detail i ON f.detail_idx = i.detail_idx
		LEFT JOIN lms_edu_module_play g ON a.module_play_idx = g.module_play_idx
		LEFT JOIN 
    (
        SELECT 
            *,
            ROW_NUMBER() OVER (PARTITION BY module_play_idx ORDER BY process_start_time DESC) AS rn
        FROM 
            lms_edu_process_play
    ) h ON a.module_play_idx = h.module_play_idx AND h.rn = 1
			<include refid="selectWhere"/>
	</select>
	
	<insert id="insert" parameterType="kepco.lms.edu.event.EventVo" useGeneratedKeys="true" keyProperty="eventIdx" keyColumn="eventIdx">
		INSERT INTO lms_edu_event (
			play_idx, module_play_idx, task_id,
			event_id, evaluation_id, 
			accident_yn,
			risk_factor, risk_level, risk_value1, risk_value2,
			event_start_time
		)
		VALUES (
			#{playIdx}, #{modulePlayIdx}, #{taskId},
			#{eventId}, #{evaluationId},
			#{accidentYn},
			#{riskFactor}, #{riskLevel}, #{riskValue1}, #{riskValue2},
			#{eventStartTime}
		)
	</insert>
	
	<insert id="eventStart" parameterType="kepco.lms.edu.event.EventVo" useGeneratedKeys="true" keyProperty="eventIdx" keyColumn="eventIdx">
		INSERT INTO lms_edu_event (
			play_idx, module_play_idx, task_id, risk_id,
			event_id, evaluation_id, 
			accident_yn,
			risk_factor, risk_level, risk_value1, risk_value2,
			event_start_time, event_end_time
		)
		VALUES (
			#{playIdx}, #{modulePlayIdx}, #{taskId}, #{riskId},
			#{eventId}, #{evaluationId},
			#{accidentYn},
			#{riskFactor}, #{riskLevel}, #{riskValue1}, #{riskValue2},
			#{eventStartTime}, #{eventEndTime}
		)
	</insert>
	<update id="eventEnd" parameterType="kepco.lms.edu.event.EventVo">
		UPDATE lms_edu_event
		<set>
				event_end_time = #{eventEndTime}
		</set>
		WHERE
			delete_yn = 'n'
			AND event_idx = #{eventIdx}
	</update>
	
	<!-- 사고 목록 --> 
	<select id="eventIdList" parameterType="map" resultType="kepco.lms.edu.event.EventVo">
		SELECT a.event_id
		FROM lms_edu_accident a
		WHERE event_id LIKE CONCAT ('%',#{taskId},'%') AND a.delete_yn = 'n'
	</select>
	
	<update id="delete" parameterType="kepco.lms.edu.event.EventVo">
		UPDATE lms_edu_event
		<set>
			delete_yn = 'y'
		</set>
		WHERE
			delete_yn = 'n'
			AND event_idx = #{eventIdx}
	</update>
	
	<select id="teamEventList" parameterType="map" resultType="kepco.lms.edu.event.EventVo">
		SELECT a.*
		FROM lms_edu_event a
		LEFT JOIN lms_edu_process b ON a.task_id = b.task_id
		LEFT JOIN lms_edu_accident c ON a.event_id = c.event_id
		LEFT JOIN lms_edu_accident_content d ON c.accident_code = d.accident_code
		LEFT JOIN lms_edu_play f ON a.play_idx = f.play_idx
		LEFT JOIN lms_edu_module_play g ON a.module_play_idx = g.module_play_idx
			<include refid="selectWhere"/>
			<if test="!@kepco.util.StrUtil@isBlank(moduleCd)">
				AND g.module_cd = #{moduleCd}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(attempt)">
				AND g.attempt = #{attempt}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(team)">
				AND f.team = #{team}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(detailIdx)">
				AND f.detail_idx = #{detailIdx}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(step)">
				AND b.step = #{step}
			</if>
			<if test="!@kepco.util.StrUtil@isBlank(accidentedTime)">
			    AND a.event_start_time > #{accidentedTime}
			</if>
	</select>
	
	<select id="accidentList" parameterType="map" resultType="kepco.lms.edu.event.EventVo">
		SELECT e.*
		FROM lms_edu_detail a
		LEFT JOIN lms_edu_pack b ON a.edu_idx = b.edu_idx
		LEFT JOIN lms_edu_module c ON b.module_idx = c.module_idx
		LEFT JOIN lms_edu_accident d ON d.event_id LIKE CONCAT('%', c.module_cd, '%')
		LEFT JOIN lms_edu_accident_content e ON d.accident_code = e.accident_code
        WHERE a.detail_idx = #{detailIdx}
        GROUP BY e.accident_code
        ORDER BY e.accident_code
		
	</select>
	
	<select id="eventList" parameterType="map" resultType="kepco.lms.edu.event.EventVo">
		SELECT a.*, b.process_idx, b.work_role, b.process_contents, b.task_tool, 
		c.accident_idx, c.event_location, c.accident_event, c.object_factor, c.behavior_factor, c.accident_code,
		d.accident_content_idx, d.accident_type, d.accident_cause, d.accident_behavior,
		f.work_role,
		h.c1, h.c2, h.c3, h.c4, h.c5, h.weather,
		
		TIMESTAMPDIFF(SECOND, g.module_start_time, a.event_start_time) AS event_elapsed_start_time,
		TIMESTAMPDIFF(SECOND, g.module_start_time, a.event_end_time) AS event_elapsed_end_time
		
		FROM lms_edu_event a
		LEFT JOIN lms_edu_process b ON a.task_id = b.task_id
		LEFT JOIN lms_edu_accident c ON a.event_id = c.event_id
		LEFT JOIN lms_edu_accident_content d ON c.accident_code = d.accident_code
		LEFT JOIN lms_edu_play f ON a.play_idx = f.play_idx
		LEFT JOIN lms_edu_module_play g ON a.module_play_idx = g.module_play_idx
		LEFT JOIN 
    (
        SELECT 
            *,
            ROW_NUMBER() OVER (PARTITION BY module_play_idx ORDER BY process_start_time DESC) AS rn
        FROM 
            lms_edu_process_play
    ) h ON a.module_play_idx = h.module_play_idx AND h.rn = 1

			<include refid="selectWhere"/>
	ORDER BY a.event_start_time DESC 
	</select>
</mapper>